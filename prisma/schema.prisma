generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique @db.VarChar(50)
  first_name String   @db.VarChar(50)
  last_name  String   @db.VarChar(50)
  email      String   @unique @db.VarChar(50)
  password   String   @db.VarChar(70)
  profile    Profile?
}

model Profile {
  id         Int      @id @default(autoincrement())
  bio        String?  @db.Text
  avatar     String?  @db.VarChar(50)
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int      @unique
  posts      Post[]
  follower   Follow[] @relation("Follower")
  following  Follow[] @relation("Following")
  blacklist Blacklist[]
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(50)
  content    String    @db.Text
  created_at DateTime  @default(now())
  likes      Int       @default(0)
  profile    Profile   @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  profile_id Int
  comments   Comment[]
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String   @db.Text
  created_at DateTime @default(now())
  likes      Int      @default(0)
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id    Int
  replies    Reply[]
}

model Reply {
  id         Int      @id @default(autoincrement())
  content    String   @db.Text
  created_at DateTime @default(now())
  likes      Int      @default(0)
  comment    Comment  @relation(fields: [comment_id], references: [id], onDelete: Cascade)
  comment_id Int
}

model Follow {
  id           Int     @id @default(autoincrement())
  follower     Profile @relation("Follower", fields: [follower_id], references: [id])
  follower_id  Int
  following    Profile @relation("Following", fields: [following_id], references: [id])
  following_id Int
}

model Blacklist {
  id      Int     @id @default(autoincrement())
  user    Profile @relation(fields: [user_id], references: [id])
  user_id Int
}
